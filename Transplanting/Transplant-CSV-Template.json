[
    {
        "id": "fdfd790779661d44",
        "type": "tab",
        "label": "Transplanting CSV Upload",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a73622ab3edc11c8",
        "type": "sf:895a366cbeeeb85e",
        "z": "fdfd790779661d44",
        "name": "",
        "x": 540,
        "y": 120,
        "wires": [
            [
                "764643b9d5ab2bb1",
                "68effd0615252292"
            ]
        ]
    },
    {
        "id": "17cf4c7367682cbc",
        "type": "credentials",
        "z": "fdfd790779661d44",
        "name": "",
        "props": [
            {
                "value": "payload.url",
                "type": "msg"
            },
            {
                "value": "payload.username",
                "type": "msg"
            },
            {
                "value": "payload.password",
                "type": "msg"
            },
            {
                "value": "payload.client_id",
                "type": "msg"
            },
            {
                "value": "client_secret",
                "type": "msg"
            },
            {
                "value": "payload.scope",
                "type": "msg"
            }
        ],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "a73622ab3edc11c8"
            ]
        ]
    },
    {
        "id": "904157476b1fbb8e",
        "type": "inject",
        "z": "fdfd790779661d44",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "17cf4c7367682cbc"
            ]
        ]
    },
    {
        "id": "79d41fe6fde27ee4",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "farmOS Import Plant Assets CSV",
        "func": "//Declare Variables from CSV\nvar name = msg.payload.Name;\nvar description = msg.payload.Description;\nvar crop = msg.payload[\"Crop/variety\"];\nvar season = msg.payload.Season;\n\n//Get flow Variables\nvar plant_terms = flow.get(\"plant_terms\");\nvar season_terms = flow.get(\"season_terms\");\n\nvar crop_id = null;\nvar season_id = null;\n\n//Search for plant term uuid\nplant_terms.forEach(data => {\n    if (data.name == crop) {\n        crop_id = data.id;\n        }   \n    })\n\n//search for season term uuid \nseason_terms.forEach(data => {\n    if (data.name == season) {\n        season_id = data.id;\n        }   \n    })\n\n    if (crop_id != null && season_id != null) {\n//Create Asset Object \nmsg.payload = {\n  \"data\": {\n\t\"type\": \"asset--plant\",\n\t\"attributes\": {\n\t\t\"name\": name,\n\t\t\"status\": \"active\",\n\t\t\"notes\": description,\n\t\t\"flag\": []\n\t},\n\t\"relationships\": {\n\t\t\"plant_type\": {\n\t\t\t\"data\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"taxonomy_term--plant_type\",\n\t\t\t\t\t\"id\": crop_id\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"season\": {\n\t\t\t\"data\": [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"taxonomy_term--season\",\n\t\t\t\t\t\"id\": season_id\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}}}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 660,
        "wires": [
            [
                "59701d5945fece19"
            ]
        ]
    },
    {
        "id": "c5150dd67d629cd4",
        "type": "debug",
        "z": "fdfd790779661d44",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1310,
        "y": 660,
        "wires": []
    },
    {
        "id": "59701d5945fece19",
        "type": "sf:949541c9b70110d5",
        "z": "fdfd790779661d44",
        "name": "POST Asset",
        "API": "asset/plant",
        "Method": "POST",
        "x": 790,
        "y": 660,
        "wires": [
            [
                "f3714430735a9494"
            ]
        ]
    },
    {
        "id": "676cfaa9fb454337",
        "type": "sf:949541c9b70110d5",
        "z": "fdfd790779661d44",
        "name": "Get Plant Terms",
        "API": "taxonomy_term/plant_type",
        "Method": "GET",
        "x": 540,
        "y": 180,
        "wires": [
            [
                "ebe001c84fbda7ac"
            ]
        ]
    },
    {
        "id": "ebe001c84fbda7ac",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Store Plant terms",
        "func": "var array = flow.get('plant_terms') || [];\nvar name;\nvar id;\n\nmsg.payload.data.forEach(data => {\nname = data.attributes.name;\nid = data.id;\narray.push({id:id,name:name});\n})\n\nflow.set(\"plant_terms\", array);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 180,
        "wires": [
            [
                "039244b4f78d026f"
            ]
        ]
    },
    {
        "id": "039244b4f78d026f",
        "type": "sf:949541c9b70110d5",
        "z": "fdfd790779661d44",
        "name": "Get Season Terms",
        "API": "taxonomy_term/season",
        "Method": "GET",
        "x": 530,
        "y": 240,
        "wires": [
            [
                "272f448dda1152f6"
            ]
        ]
    },
    {
        "id": "272f448dda1152f6",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Store Season terms",
        "func": "var array = flow.get('season_terms') || [];\nvar name;\nvar id;\n\nmsg.payload.data.forEach(data => {\nname = data.attributes.name;\nid = data.id;\narray.push({id:id,name:name});\n})\n\nflow.set(\"season_terms\", array);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 240,
        "wires": [
            [
                "facd6ed66f6dc3bd"
            ]
        ]
    },
    {
        "id": "764643b9d5ab2bb1",
        "type": "change",
        "z": "fdfd790779661d44",
        "name": "Clear Variables",
        "rules": [
            {
                "t": "delete",
                "p": "plant_terms",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "season_terms",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "unit_terms",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "land_uuid",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 120,
        "wires": [
            [
                "676cfaa9fb454337"
            ]
        ]
    },
    {
        "id": "62a4491c731f2b93",
        "type": "comment",
        "z": "fdfd790779661d44",
        "name": "Authenticate and Get Taxanomy Terms",
        "info": "",
        "x": 210,
        "y": 40,
        "wires": []
    },
    {
        "id": "1767f412b58705e2",
        "type": "comment",
        "z": "fdfd790779661d44",
        "name": "Create Plant Asset from CSV",
        "info": "",
        "x": 180,
        "y": 580,
        "wires": []
    },
    {
        "id": "af928334cff4f587",
        "type": "inject",
        "z": "fdfd790779661d44",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 800,
        "wires": [
            [
                "9002f8c12b12a836"
            ]
        ]
    },
    {
        "id": "7e07e681b9117e03",
        "type": "comment",
        "z": "fdfd790779661d44",
        "name": "Create Transplanting log from CSV",
        "info": "",
        "x": 200,
        "y": 740,
        "wires": []
    },
    {
        "id": "f3714430735a9494",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Store plant uuid",
        "func": "var array = flow.get('plant_uuid') || [];\nvar name = msg.payload.data.attributes.name;\nvar id = msg.payload.data.id;\n\narray.push({id:id,name:name});\n\nflow.set(\"plant_uuid\", array);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 660,
        "wires": [
            [
                "c5150dd67d629cd4"
            ]
        ]
    },
    {
        "id": "facd6ed66f6dc3bd",
        "type": "sf:949541c9b70110d5",
        "z": "fdfd790779661d44",
        "name": "Get Unit Terms",
        "API": "taxonomy_term/unit",
        "Method": "GET",
        "x": 540,
        "y": 300,
        "wires": [
            [
                "8fcc69c3c41eb8c4"
            ]
        ]
    },
    {
        "id": "8fcc69c3c41eb8c4",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Store Unit terms",
        "func": "var array = flow.get('unit_terms') || [];\nvar name;\nvar id;\n\nmsg.payload.data.forEach(data => {\nname = data.attributes.name;\nid = data.id;\narray.push({id:id,name:name});\n})\n\nflow.set(\"unit_terms\", array);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 300,
        "wires": [
            [
                "ea5f98717603dc4d"
            ]
        ]
    },
    {
        "id": "c9ac92bfa36a809f",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "farmOS Import length FB CSV",
        "func": "//Declare variables\nvar unit = \"m\"\n\n//Declare Variables from CSV\nvar length = msg.payload[\"length FB\"];\nvar nr = msg.payload[\"Nr plants FB\"];\nvar name = msg.payload.Name;\nvar description = msg.payload.Description;\nvar land = msg.payload[\"Area/Location\"];\n\n//Get flow Variables\nvar unit_terms = flow.get(\"unit_terms\");\nvar plant_uuid = flow.get(\"plant_uuid\");\nvar land_uuid = flow.get(\"land_uuid\");\n\n\n//Declare empty variables\nvar plant_id = null;\nvar land_id = null;\nvar unit_id = null;\n\n//Generate UUID's\nvar Luuid = uuid.v1();\nvar Nruuid = uuid.v1();\n\n\n//search for plant uuid \nplant_uuid.forEach(data => {\n\tif (data.name == name) {\n\t\tplant_id = data.id;\n\t}\n})\n\n//Search for land uuid\n\nland_uuid.forEach(data => {\n\tif (data.name == land) {\n\t\tland_id = data.id;\n\t}\n})\n\n\n//Search for plant term uuid\nunit_terms.forEach(data => {\n\tif (data.name == unit) {\n\t\tunit_id = data.id;\n\t}\n})\n\n\n\nif (plant_id != null && land_id != null && unit_id != null) {\n\n    \nvar numerator = length;\nvar denominator = 1;\nwhile (numerator % 1) numerator *= 10;\ndenominator = numerator / length;\n\n\n//Create Quntity \nvar len = {\n  \"data\": {\n\t\"type\": \"quantity--standard\",\n\t\"id\": Luuid,\n\t\"attributes\": {\n\t\t\"measure\": \"length\",\n\t\t\"value\": {\n\t\t    \"numerator\":numerator,\n\t\t    \"denominator\":denominator\n\t\t},\n\t\t\"label\": \"length FB\"\n\t},\n\t\"relationships\": {\n\t\t\"units\": {\n\t\t\t\"data\": {\n\t\t\t\t\"type\": \"taxonomy_term--unit\",\n\t\t\t\t\"id\": unit_id\n\t\t\t}\n\t\t}\n\t}\n}   \n}\nmsg.length = JSON.stringify(len);\n\n//Create Quantity\nvar nrp = {\n\t\"data\": {\n\t\t\"type\": \"quantity--standard\",\n\t\t\"id\": Nruuid,\n\t\t\"attributes\": {\n\t\t\t\"measure\": \"count\",\n\t\t\t\"value\": {\n\t\t\t\t\"numerator\": nr,\n\t\t\t\t\"denominator\": 1\n\t\t\t},\n\t\t\t\"label\": \"Nr plants FB\"\n\t\t}\n\t}\n\n  }\nmsg.nr = JSON.stringify(nrp);\n\n\n\n\t//Create Asset Object \n\tvar log = {\n\t\t\"data\": {\n\t\t\t\"type\": \"log--transplanting\",\n\t\t\t\"attributes\": {\n\t\t\t\t\"data\": name,\n\t\t\t\t\"status\": \"done\",\n\t\t\t\t\"notes\": {\n\t\t\t\t\t\"value\": description\n\t\t\t\t},\n\t\t\t\t\"flag\": [],\n\t\t\t\t\"is_movement\": true\n\t\t\t},\n\t\t\t\"relationships\": {\n\t\t\t\t\"location\": {\n\t\t\t\t\t\"data\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"asset--land\",\n\t\t\t\t\t\t\t\"id\": land_id\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"asset\": {\n\t\t\t\t\t\"data\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"asset--plant\",\n\t\t\t\t\t\t\t\"id\": plant_id\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"quantity\": {\n\t\t\t\t\t\"data\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"quantity--standard\",\n\t\t\t\t\t\t\t\"id\": Luuid,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"type\": \"quantity--standard\",\n\t\t\t\t\t\t\t\"id\": Nruuid,\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\nmsg.log = JSON.stringify(log);\n}\n\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "uuid",
                "module": "uuid"
            }
        ],
        "x": 530,
        "y": 800,
        "wires": [
            [
                "569dbf148deda98e"
            ]
        ]
    },
    {
        "id": "bbf267869249b4d5",
        "type": "csv",
        "z": "fdfd790779661d44",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 670,
        "y": 420,
        "wires": [
            [
                "9bb18fe55fbaa10c"
            ]
        ]
    },
    {
        "id": "e482811891061495",
        "type": "file in",
        "z": "fdfd790779661d44",
        "name": "",
        "filename": "/transplant.csv",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 540,
        "y": 420,
        "wires": [
            [
                "bbf267869249b4d5"
            ]
        ]
    },
    {
        "id": "9bb18fe55fbaa10c",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Store CSV",
        "func": "flow.set(\"CSV\", msg.payload);\nlet outputMsgs = [];\n\nmsg.payload.forEach(data => {\n  outputMsgs.push({payload:data});\n    })\n\nreturn [ outputMsgs ];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 420,
        "wires": [
            [
                "cb64fe0fd43d8019"
            ]
        ]
    },
    {
        "id": "9002f8c12b12a836",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Get CSV",
        "func": "var CSV = flow.get(\"CSV\");\nlet outputMsgs = [];\n\nCSV.forEach(data => {\n  outputMsgs.push({payload:data});\n    })\n\nreturn [ outputMsgs ];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 800,
        "wires": [
            [
                "c9ac92bfa36a809f"
            ]
        ]
    },
    {
        "id": "9d96540f45572eab",
        "type": "debug",
        "z": "fdfd790779661d44",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 800,
        "wires": []
    },
    {
        "id": "1f84f9423836d07a",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Get CSV",
        "func": "var CSV = flow.get(\"CSV\");\nlet outputMsgs = [];\n\nCSV.forEach(data => {\n  outputMsgs.push({payload:data});\n    })\n\nreturn [ outputMsgs ];\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 660,
        "wires": [
            [
                "79d41fe6fde27ee4"
            ]
        ]
    },
    {
        "id": "99b1044cb4777343",
        "type": "inject",
        "z": "fdfd790779661d44",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "1f84f9423836d07a"
            ]
        ]
    },
    {
        "id": "ea5f98717603dc4d",
        "type": "sf:949541c9b70110d5",
        "z": "fdfd790779661d44",
        "name": "Get Land assets",
        "API": "asset/land",
        "Method": "GET",
        "x": 540,
        "y": 360,
        "wires": [
            [
                "49a26d4caeab0825"
            ]
        ]
    },
    {
        "id": "49a26d4caeab0825",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Store Land UUID",
        "func": "var array = flow.get('land_uuid') || [];\nvar name;\nvar id;\n\nmsg.payload.data.forEach(data => {\nname = data.attributes.name;\nid = data.id;\narray.push({id:id,name:name});\n})\n\nflow.set(\"land_uuid\", array);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "e482811891061495"
            ]
        ]
    },
    {
        "id": "a10b53d9da57b126",
        "type": "comment",
        "z": "fdfd790779661d44",
        "name": "Save CSV File",
        "info": "",
        "x": 280,
        "y": 420,
        "wires": []
    },
    {
        "id": "68effd0615252292",
        "type": "debug",
        "z": "fdfd790779661d44",
        "name": "debug 17",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 80,
        "wires": []
    },
    {
        "id": "cb64fe0fd43d8019",
        "type": "debug",
        "z": "fdfd790779661d44",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 420,
        "wires": []
    },
    {
        "id": "569dbf148deda98e",
        "type": "function",
        "z": "fdfd790779661d44",
        "name": "Subrequest",
        "func": "\n\nvar token = global.get(\"token\");\nmsg.payload = [\n    {\n        \"requestId\": \"req-1\",\n        \"uri\": \"/api/quantity/standard\",\n        \"action\": \"create\",\n        \"body\": msg.length,\n        \"headers\": {\n            \"Accept\": \"application/vnd.api+json\",\n            \"Content-Type\": \"application/vnd.api+json\",\n            \"Authorization\": \"Bearer \" + token\n        }\n    },\n    {\n        \"requestId\": \"req-2\",\n        \"uri\": \"/api/quantity/standard\",\n        \"action\": \"create\",\n        \"body\": msg.nr,\n        \"headers\": {\n            \"Accept\": \"application/vnd.api+json\",\n            \"Content-Type\": \"application/vnd.api+json\",\n            \"Authorization\": \"Bearer \" + token\n        }\n    },\n    {\n        \"requestId\": \"req-3\",\n        \"waitFor\": [\"req-1\",\"req-2\"],\n        \"uri\": \"/api/log/transplanting\",\n        \"action\": \"create\",\n        \"body\": msg.log,\n        \"headers\": {\n            \"Accept\": \"application/vnd.api+json\",\n            \"Content-Type\": \"application/vnd.api+json\",\n            \"Authorization\": \"Bearer \" + token\n        }\n    }\n]\n\n\nmsg.headers = {};\nmsg.headers['Authorization'] = \"Bearer \" + token;\nmsg.headers['Accept'] = \"application/vnd.api+json\";\nmsg.headers['content-type'] = 'application/vnd.api+json';\nmsg.url = global.get('farmOSurl').concat('/subrequests?_format=json')\nmsg.method = \"POST\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 800,
        "wires": [
            [
                "f185619a40bf35f3"
            ]
        ]
    },
    {
        "id": "d93b394eaa732596",
        "type": "http request",
        "z": "fdfd790779661d44",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1130,
        "y": 800,
        "wires": [
            [
                "9d96540f45572eab"
            ]
        ]
    },
    {
        "id": "f185619a40bf35f3",
        "type": "delay",
        "z": "fdfd790779661d44",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 800,
        "wires": [
            [
                "d93b394eaa732596"
            ]
        ]
    }
]
